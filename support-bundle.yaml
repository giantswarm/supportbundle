apiVersion: troubleshoot.sh/v1beta2
kind: SupportBundle
metadata:
    name: giantswarm
spec:
  collectors:
      - clusterResources:
          namespaces:
          - kube-system
          - giantswarm
      - logs:
          namespace: kube-system
          name: logs/kubesystem
          limits:
            maxAge: 1h
            maxLines: 1000
      - logs:
          namespace: giantswarm
          name: logs/giantswarm
          limits:
            maxAge: 1h
            maxLines: 1000
      - exec:
          name: "nslookupexternal"
          namespace: kube-system
          selector:
            - app.kubernetes.io/name=cert-exporter-daemonset
          title: "External DNS resolve check"
          command: ["nslookup"]
          args: ["www.google.es"]
      - exec:
          name: "nslookupinternal"
          namespace: kube-system
          selector:
            - app.kubernetes.io/name=cert-exporter-daemonset
          title: "External DNS resolve check"
          command: ["nslookup"]
          args: ["kubernetes.default.svc.cluster.local"]
  analyzers:
    - deploymentStatus:
        name: coredns
        namespace: kube-system
        outcomes:
          - fail:
              when: "< 1"
              message: CoreDNS does not have any ready replicas.
          - warn:
              when: "= 1"
              message: CoreDNS has only a single ready replica.
          - pass:
              message: There are multiple replicas of CoreDNS deployment ready.
    - deploymentStatus:
        name: cluster-autoscaler
        uri: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/cluster-autoscaler-scaling/
        namespace: kube-system
        outcomes:
          - fail:
              when: "< 1"
              message: Cluster-autoscaler does not have any ready replicas.
          - pass:
              message: Cluster-autoscaler is running.
    - deploymentStatus:
        name: external-dns
        namespace: kube-system
        outcomes:
          - fail:
              when: "< 1"
              message: External-DNS does not have any ready replicas.
          - pass:
              message: External-DNS is running.
    - deploymentStatus:
        name: cert-manager-controller
        namespace: kube-system
        outcomes:
          - fail:
              when: "< 1"
              message: CertManager does not have any ready replicas.
          - pass:
              message: CertManager is running.
    # Check if all deployments are satisfied
    - deploymentStatus:
        namespace: kube-system
    - clusterPodStatuses:
        name: unhealthy
        namespaces:
          - kube-system
          - giantswarm
        outcomes:
          - fail:
              when: "!= Healthy"
              message: Pod {{ .Namespace }}/{{ .Name }} is unhealthy with a status of {{ .Status.Reason }}.
    - textAnalyze:
        checkName: External DNS resolve check
        fileName: nslookupexternal/*/*/*.txt
        regex: 'NXDOMAIN|connection timed out'
        outcomes:
          - pass:
              when: "false"
              message: "External DNS resolution is ok"
          - fail:
              when: "true"
              message: "Problem with external DNS resolution"
    - textAnalyze:
        checkName: Internal DNS resolve check
        fileName: nslookupinternal/*/*/*.txt
        regex: 'NXDOMAIN|connection timed out'
        outcomes:
          - pass:
              when: "false"
              message: "Internal DNS resolution is ok"
          - fail:
              when: "true"
              message: "Problem with internal DNS resolution"
    - textAnalyze:
        checkName: Webhooks
        fileName: logs/kubesystem/k8s-api-server*.log
        regex: 'failed calling webhook'
        outcomes:
          - pass:
              when: "false"
              message: "No webhooks failure detected"
          - fail:
              when: "true"
              message: "Webhooks failed, check api logs"
    - textAnalyze:
        checkName: API Timeouts
        fileName: logs/kubesystem/k8s-api-server*.log
        regex: 'i/o timeout'
        outcomes:
          - pass:
              when: "false"
              message: "No timeouts failure detected"
          - fail:
              when: "true"
              message: "Timeouts detected in K8s API, check api logs"
    - textAnalyze:
        checkName: PLEG
        fileName: logs/kubesystem/k8s-api-server*.log
        regex: 'PLEG is not healthy'
        outcomes:
          - pass:
              when: "false"
              message: "No PLEG failure detected"
          - fail:
              when: "true"
              message: "PLEG issues found, check api logs"
    - textAnalyze:
        checkName: ExternalDNS InvalidChangeBatch
        fileName: logs/kubesystem/external-dns*/external-dns.log
        regex: 'InvalidChangeBatch'
        outcomes:
          - pass:
              when: "false"
              message: "No externalDNS InvalidChangeBatch failure detected"
          - fail:
              when: "true"
              message: "ExternalDNS InvalidChangeBatch issues found, check externalDNS logs"
    - nodeResources:
        checkName: Worker Nodes
        filters:
          selector:
              matchLabel:
                kubernetes.io/role: worker
        outcomes:
          - warn:
              when: "count() < 3"
              message: There are less than 3 workers.
          - pass:
              message: This cluster has enough nodes.
    - nodeResources:
        checkName: Control Plane Nodes
        filters:
          selector:
              matchLabel:
                kubernetes.io/role: master
        outcomes:
          - warn:
              when: "count() == 1"
              message: This cluster has a single master.
          - pass:
              message: This is cluster has HA control plane.